참조변수의 형변환
기본형 변수처럼 참조변수도 형변환이 가능하다. 단, 서로 상속관계에 있는 클래스 사이에서만 가능하기 때문에 자손타입의 참조변수를 조상타입의 참조변수로, 조상타입의 참조변수를 자손타입의 참조변수로의 형변환만 가능하다.
(참고 : 바로 윗 조상이나 자손이 아닌, 조상의 조상으로도 형변환이 가능하다. 따라서 모든 참조변수는 모든 클래스의 조상인 Object클래스 타입으로 형변환이 가능하다.)

class Car {}
class FireEngine extends Car {}
class Ambulance extends Car {}

만일 위와 같이 Car클래스가 있고 이를 상속받는 FireEngine, Ambulance클래스가 있을 떄, FireEngine타입의 참조변수 f는 조상타입인 Car로 형변환이 가능하다.
반대로 Car타입의 참조변수를 자손타입인 FireEngine으로 형변환하는 것도 가능하다. 그러나 FireEngine과 Ambulance는 상속관계가 아니므로 형변환이 불가능하다.

FireEngine f = new FireEngine();

Car c = (Car)f;			//OK. 조상은 Car타입으로 형변환(생략가능)
FireEngine f2 = (FireEngine)c;	//OK. 자손인 FireEngine타입으로 형변환(생략불가)
Ambulance a = (Ambulance)f;	//에러. 상속관계가 아닌 클래스 간의 형변환 불가

기본형의 형변환과 달리 참조형의 형변환은 변수에 저장된 값(주소값)이 변환되는 것이 아니다.

Car c = (Car)f;	//f의 값(객체의 주소)을 c에 저장
		//타입을 일치시키기 위해 형변환 필요(생략가능)
f = (FireEngine) c;	//조상타입을 자손타입으로 형변환하는 경우 생략불가

참조변수의 형변환은 그저 리모컨(참조변수)을 다른 종류의 것으로 바꾸는 것 뿐이다.
리모컨의 타입을 바꾸는 이유는 사용할 수 있는 멤버 변수 개수를 조절하기 위한 것이고, 그 이유는 곧 섦여할 것이다.
위와 같이 조상 타입으로의 형변환을 생략할 수 있는 이유는 조상타입으로 형변환하면 다룰 수 있는 멤버의 개수가 줄어들기 때문에 항상 안전하기 때문이다.
반대로 실제 객체가 가진 기능보다 리모컨의 버튼이 더 많으면 안된다.

서로 상속관계에 있는 타입간의 형변환은 양방향으로 자유롭게 수행될 수 있으나, 참조변수가 가리키는 인스턴스의 자손타입으로 형변환은 허용되지 않는다.
그래서 참조변수가 가리키는 인스턴스의 타입이 무엇인지 먼저 확인하는 것이 중요하다.

