여러 종류의 객체를 배열로 다루기
조상타입의 참조변수로 자손타입의 객체를 참조하는 것이 가능하므로, Product클래스가 Tv, Computer, Audio클래스의 조상일 때, 다음과 같이 할 수 있는 것을 이미 배웠다.

Product p1 = new Tv();
Product p2 = new Computer();
Product p3 = new Audio();

위의 코드를 Product타입의 참조변수 배열로 처리하면 아래와 같다.

Product p[] = new Product[3];
p[0] = new Tv();
p[1] = new Computer();
p[2] = new Audio();

이처럼 조상타입의 참조변수 배열을 사용하면, 공통의 조상을 가진 서로 다른 종류의 객체를 배열로 묶어서 다룰 수 있다.
또는 묶어서 다루고싶은 객체들의 상속관계를 따져서 가장 가까운 공통조상 클래스 타입의 참조변수 배열을 생성해서 저장하면 된다.

class Buyer {
	int money = 1000;
	int bonusPoint = 0;
	Product[] cart = new Product[10];		//구입한 제품을 저장하기 위한 배열(카트)
	int i = 0;					//Product배열 cart에 사용될 index

	void buy(Product p) {
		if(money < p.price) {
			System.out.println("잔액이 부족하여 물건을 살 수 없습니다");
			return;
		}

		money -= p.price;			//가진 돈에서 제품가격을 뺀다.
		bonusPoint += p.bonusPoint;	//제품의 보너스포인트를 더한다.
		cart[i++] = p;			//제품을 Product[] cart에 저장한다.
		System.out.println(p + "을/를 구입하셨습니다.")
	}
}

구입한 제품을 담기 위해 Product클래스에 Product배열인 cart을 추가해주었다. 그리고 buy메소드에 'cart[i++] = p;' 문장을 추가함으로써 물건을 구입하면, 배열 cart에 저장되도록 했다.
이렇게 함으로써 모든 제품클래스의 조상인 Product클래스 타입의 배열을 사용함으로써 구입한 제품을 하나의 배열로 간단하게 다룰 수 있게 된다.