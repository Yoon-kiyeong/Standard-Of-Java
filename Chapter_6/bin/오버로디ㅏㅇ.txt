오버로딩(Overloading)
메소드도 변수와 마찬가지로 같은 클래스 내에서 서로 구별될 수 있어야 하기 때문에 각기 다른 이름을 가져야 한다.
그러나 자바에서는 한 클래스 내에 이미 사용하려는 이름과 같은 이름을 가진 메소드가 있더라도 매개변수의 개수 또는 타입이 다르면, 같은 이름을 사용해서 메소드를 정의할 수 있다.
이처럼, 한 클래스 내에 같은 이름의 메소드를 여러 개 정의하는 것을 '메소드 오버로딩(method overloading)'또는 간단히 '오버로딩(overloading)'이라고 한다.
같은 이름의 메소드를 정의한다고 해서 무조건 오버로딩인 것은 아니다. 오버로딩이 성립하기 위해서는 다음과 같은 조건을 만족해야 한다.
1. 메소드 이름이 같아야 한다.
2. 매개변수의 개수 또는 타입이 달라야 한다.
3. 반환 타입은 관계없다.

비록 메소드의 이름이 같다 하더라도 매개변수가 다르면 서로 구별될 수 있기 때문에 오버로딩이 가능한 것이다.
위의 조건을 만족시키지 못하는 메소드는 중복 정의로 간주되어 컴파일 시에 에러가 발생한다.
그리고 오버로딩된 메소드들은 매개변수에 의해서만 구별될 수 있으므로 반환 타입은 오버로딩을 구현하는데 어무런 영향을 주지 못한다는 것에 주의하자.
오버로딩의 예로 가장 대표적인 것은 println메소드이다. 지금까지 우리는 println메소드의 괄호 안에 값만 지정해주면 화면에 출력하는데 아무런 어려움이 없었다.
하지만, 실제로는 println메소드를 호출할 때 매개변수로 지정하는 값의 타입에 따라서 호출되는 println메소드가 달라진다.
PrintStream클래스에는 어떤 종류의 매개변수를 지정해도 출력할 수 있도록 아래와 같이 10개의 오버로딩된 println메소드를 정의해놓고 있다.

void println()
void println(boolean x)
void println(char x)
void println(char[] x)
void println(double x)
void println(float x)
void println(int x)
void println(long x)
void println(Object x)
void println(String x)

println메소드를 호출할 때 매개변수로 넘겨주는 값의 타입에 따라서 위의 오버로딩된 메소드들 중의 하나가 선택되어 실행되는 것이다.
ex)
int add(int a, int b) { return a + b;}
int add(int x, int y) { return a + b;}