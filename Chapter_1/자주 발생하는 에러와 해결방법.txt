자주 발생하는 에러와 해결 방법
자바로 프로그래밍을 배워나가면서 많은 수의 크고 작은 에러들을 접하게 될 것이다.
대부분의 에러는 작은 실수에서 비롯된 것들이며, 곧 익숙해져서 쉽게 대응할 수 있게 되지만 처음 배울 때는 작은 실수 하나 때문에 많은 시간을 허비하곤 한다.

자주 발생하는 에러
1. cannot find symbol 또는 cannot resolve symbol
지정된 변수나 메소드를 찾을 수 없다는 뜻으로 선언되지 않은 변수나 메소드를 사용하거나, 변수 또는 메소드의 이름을 잘못 사용한 경우에 발생한다.
자바에서는 대소문자 구분을 하기 때문에 철자 뿐 만아니라 대소문자의 일치여부도 꼼꼼하게 확인해야 한다.

2. ';' expected
세미콜론 ';'이 필요한 곳에 없다는 뜻이다. 자바의 모든 문장의 끝에는 ';'을 붙어주어야 하는데 가끔 이를 잊고 실수하기 쉽다.

3. Exception in thread "main" java.lang.NoSuchMethodError: main
'main메소드를 찾을 수 없다.'는 뜻인데 실제로 클래스 내에 main메소드가 존재하지 않거나 메소드의 선언부 'public static void main(String[] args)'에 오타가 존재하는 경우에 발생한다.
이 에러의 해결방법은 main 메소드가 클래스에 정의되어 있는지 확인하고, 정의되어 있다면 main 메소드의 선언부에 오타가 없는지 확인한다. 자바는 대소문자를 구별하므로 대소문자의 일치여부까지 정확히 확인해야한다.

4. Exception in thread "main" java.lang.NoClassDefFoundError: Hello
'Hello라는 클래스를 찾을 수 없다.'는 뜻이다. 클래스 'Hello'의 절차, 특히 대소문자를 확인 해보고 이상이 없으면 클래스파일(*.class)이 생성되었는지 확인한다.
예를 들어 'Hello.java'가 정상적으로 컴파일 되었다면 클래스파일 'Hello.class'가 있어야한다. 클래스파일이 존재하는데도 동일한 메시지가 반복해서 나타난다면 클래스패스(classpath)의 설정이 바르게 되었는지 다시 확인해보자.

5. illegal start of expression
직역하면 문장(또는 수식, expression)의 앞부분이 문법에 맞지 않는다는 의미인데, 간단히 말해서 문장에 문법적 오류가 있다는 뜻이다.
괄호'(' 나 '{'를 열고서 닫지 않거나, 수식이나 if문, for문 등에 문법적 오류가 있을 때 또는 public이나 static과 같은 키워드를 잘못 사용한 경우에도 발생한다. 
에러가 발생한 곳이 문법적으로 옳은지 확인하라.

6. class, interface, or enum expected
이 메시지의 의미는 '키워드 class나 interface 또는 enum이 없다.' 이지만, 보통 괄호 '{' 또는 '}'의 개수가 일치 하지 않는 경우에 발생한다. 열린괄호 '{'와 닫힌괄호 '}'의 개수가 같은지 확인하자.
마지막으로 한 가지 더 얘기하고 싶은 것은 것은 에러가 발생했을 때, 어떻게 해결할 것인가에 대한 방법이다.
아주 간단하고 당연한 내용이라서 다소 실망스럽게 느껴질지도 모르지만, 막상 실제 에러가 발생했을 때 아래의 순서대로 처리해보면 도움이 될 것이다.

1. 에러 메시지를 잘 읽고 해당 부분의 코드를 살펴본다.
이상이 없으면 해당 코드의 주의(윗줄과 아래 줄)도 함께 살펴본다.

2. 그래도 이상이 없으면 에러 메시지는 잊어버리고 기본적인 부분을 재확인한다.
대부분의 에러는 사소한 것인 경우가 많다.

3. 의심이 가는 부분을 주석처리하거나 따로 떼어내서 테스트 한다.

에러 메시지가 실제 에러와는 관계없는 내용일 때도 있지만, 대부분의 경우 에러 메시지만 잘 이해해도 문제가 해결되는 경우가 많으므로 에러 해결을 위해서 제일 먼저 해야 할 일응ㄴ 에러 메시지를 잘 읽는 것임을 명심하자.