package chapter_4;

public class Ex4_8 {
	public static void main(String[] args) {
		for (int i = 1; i <=3; i++) {		//괄호{}안의 문장을 3번 반복
			System.out.println("hello");
		}
	}
}


//초기화
//반복문에 사용될 변수를 초기화하는 부분이며 처음에 한번만 수행된다.
//보통 변수 하나로 for문을 제어하지만, 둘 이상의 변수가 필요할 때는 아래와 같이 콤마 ','를 구분자로 변수를 초기화하면 된다. 단, 두 변수의 타입은 같아야 한다.
//for(int i=1;i<=10;i++) {...}		//변수 i의 값을 1로 초기화 한다.
//for(int i=1,j=0;i<=10;i++) {...}	//int타입의 변수 i와 j를 선언하고 초기화
//
//조건식
//조건식의 값이 참(true)이면 반복을 계속하고, 거짓(false)이면 반복을 중단하고 for문을 벗어난다. for의 뜻이 '~하는 동안'이므로 조건식이 '참인 동안' 반복을 계속한다고 생각하면 쉽다.
//for(int i=1;i<=10;i++) {...}		//'i가<=10'가 참인 동안 블럭{} 안의 문장들을 반복
//조건식을 잘못 작성하면 블럭{} 내의 문장이 한 번도 수행되지 않거나 영원히 반복되는 무한 반복에 빠지기 쉽기 때문에 주의해야 한다.
//
//증감식
//반복문을 제어하는 변수의 값을 증가 또는 감소시키는 식이다.
//매 반복마다 변수의 값이 증감식에 의해서 점진적으로 변하다가 결국 조건식이 거짓이 되어 for문을 벗어나게 된다.
//변수의 값을 1씩 증가시키는 연산자 '++'이 증감식에 주ㅗ 사용되지만, 다음과 같이 다양한 연산자들로 증감식을 작성할 수도 있다.
//for(int i=1; i<=10; i++) {...}			//1부터 10까지 1씩 증가
//for(int i=10;i>=1;i++) {...}			//10부터 1까지 1씩 감소
//for(int i=1;i<=10;i+=2) {...}			//1부터 10까지 2씩 증가
//for(int i=1;io<=10;i*=3) {...}			//1부터 3까지 3배씩 증가
//
//증감식도 쉽표','를 이용해서 두 문장 이상을 하나로 연결해서 쓸 수 있다.
//for(int i=1, j=10;i<=10;i++,j--) {...}	// i는 1부터 10까지 1씩 증가하고 j는 10부터 1까지 1씩 감소한다.
//
//지금까지 살펴본 이 세가지 요소는 필요하지 않으면 생략할 수 있으며, 심지어 모두 생략하는 것도 가능하다.
//for(;;) {...}							//초기화, 조건식, 증감식 모두 생략. 조건식은 참이 된다.
//
//조건식이 생략된 경우, 참(true)으로 간주되어 무한 반복문이 된다. 대신 블럭 {} 안에 if문을 넣어서 특정 조건을 만족하면 for문을 빠져 나오게 해야 한다.